-----------------------------
Test Cases for 0-add_integers
-----------------------------
The Module contains an addition function that performs an approximated calculation

------
Usage:
------

Import the module
>>> add_integer = __import__('0-add_integer').add_integer

Passing arguments to add integer
>>> print(add_integer(10, 5))
15

Add floating numbers
>>> print(add_integer(2.5, 2.4))
4
>>> print(add_integer(3.94584774, 7.38239))
10

Pass no argument
>>> print(add_integer())
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

pass one argument
>>> print(add_integer(2))
100
>>> print(add_integer(12))
110

pass string as arguments
>>> print(add_integer(2, "we"))
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> print(add_integer("sd", 4))
Traceback (most recent call last):
...
TypeError: a must be an integer

Return type should be int
>>> print(type(add_integer(2, 3)) == int)
True
>>> print(type(add_integer(2.343, 3.43)) == int)
True
