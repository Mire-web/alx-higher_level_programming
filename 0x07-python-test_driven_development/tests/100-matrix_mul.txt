============================
MATRIX MULTIPLICATION MODULE
============================

This module performs a matrix multiplication and returns a product of two matrix

"""
matrix_mul([[1, 2], [3, 4]], [[3, 2], [4, 5]])
"""
::
USAGE
::
----------------------
==IMPORT THE  MODULE==
----------------------
>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

=================
PASSING ARGUMENTS
=================

==LIST OF LIST==

>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[7, 10], [15, 22]]

>>> print(matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
[[13, 16]]

---------------------------
==ARGUMENTS MUST BE LISTS==
---------------------------

>>> print(matrix_mul("we", [[1, 2]]))
Traceback (most recent call last):
...
TypeError: m_a must be a list

>>> print(matrix_mul([[2, 3]], "we"))
Traceback (most recent call last):
...
TypeError: m_b must be a list

----------------------------------------
==ARGUMENTS MUST ALSO BE LIST OF LISTS==
----------------------------------------

>>> print(matrix_mul([1, 2], [[2, 3]]))
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists

>>> print(matrix_mul([[2, 5]], [1, 2]))
Traceback (most recent call last):
...
TypeError: m_b must be a list of lists

------------------------
==LIST CANNOT BE EMPTY==
------------------------

>>> print(matrix_mul([[]], [[1]]))
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> print(matrix_mul([[4, 3]], [[]]))
Traceback (most recent call last):
...
ValueError: m_b can't be empty

>>> print(matrix_mul([], [[3, 4]]))
Traceback (most recent call last):
...
ValueError: m_a can't be empty

------------------------------------------------
==LIST CONTAINS ONLY INTEGER AND FLOAT NUMBERS==
------------------------------------------------

>>> print(matrix_mul([["ew", 3], [True, None]], [[2, 4]]))
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats

>>> print(matrix_mul([[3, 6]], [[23, str, True]]))
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats

-------------------------------------
==EACH ROW MUST BE OF THE SAME SIZE==
-------------------------------------

>>> print(matrix_mul([[1, 2], [3, 2, 4]], [[1, 2]]))
Traceback (most recent call last):
...
TypeError: each row of m_a must be of the same size

>>> print(matrix_mul([[1, 2], [2, 4]], [[1, 2], [4, 3, 5, 5]]))
Traceback (most recent call last):
...
TypeError: each row of m_b must be of the same size

----------------------------------
==IMPROPER MATRIX MULTIPLICATION==
----------------------------------
i.e The amount of column of the first matrix does not equal the amount of rows of the second matrix

>>> print(matrix_mul([[1, 2], [2, 5]], [[1, 2, 4], [1, 2, 4], [2, 5 ,3]]))
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied
